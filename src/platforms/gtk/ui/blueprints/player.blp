using Gtk 4.0;
using Adw 1;

// Player overlay UI as a template host; children are named so we can fetch them.
template $ReelPlayerOverlayHost : Gtk.Box {
  Gtk.Overlay player_overlay {
    hexpand: true;
    vexpand: true;
    can-focus: true;
    focusable: true;

    Gtk.Box video_container {
      orientation: vertical;
      hexpand: true;
      vexpand: true;
      styles ["video-container"]
    }

    [overlay]
    Gtk.Box controls_container {
      orientation: vertical;
      halign: center;
      valign: end;
      visible: false;
      opacity: 0.0;
    }

    [overlay]
    Gtk.Box top_left_osd {
      halign: start;
      valign: start;
      margin-top: 12;
      margin-start: 12;
      visible: false;
      opacity: 0.0;

      Gtk.Button back_button {
        icon-name: "go-previous-symbolic";
        tooltip-text: _("Back");
        styles ["osd", "circular"]
      }
    }

    [overlay]
    Gtk.Box top_right_osd {
      halign: end;
      valign: start;
      margin-top: 12;
      margin-end: 12;
      visible: false;
      opacity: 0.0;

      Gtk.Button close_button {
        icon-name: "window-close-symbolic";
        tooltip-text: _("Close");
        styles ["osd", "circular"]
      }
    }

    [overlay]
    Gtk.Button skip_intro_button {
      label: _("Skip Intro");
      visible: false;
      halign: end;
      valign: end;
      margin-bottom: 20;
      margin-end: 40;
      styles ["osd", "pill"]
    }

    [overlay]
    Gtk.Button skip_credits_button {
      label: _("Skip Credits");
      visible: false;
      halign: end;
      valign: end;
      margin-bottom: 20;
      margin-end: 40;
      styles ["osd", "pill"]
    }

    [overlay]
    Gtk.Box auto_play_overlay {
      orientation: horizontal;
      spacing: 20;
      visible: false;
      halign: center;
      valign: center;
      styles ["auto-play-overlay", "osd"]

      Gtk.Box pip_container {
        orientation: vertical;
        width-request: 320;
        height-request: 180;
        styles ["pip-container"]
      }

      Gtk.Box {
        orientation: vertical;
        spacing: 10;
        width-request: 400;
        styles ["next-episode-info"]

        Gtk.Label next_up_label {
          label: _("Up Next");
          xalign: 0.0;
          styles ["title-2"]
        }

        Gtk.Label next_episode_title {
          label: "";
          xalign: 0.0;
          wrap: true;
          styles ["title-1"]
        }

        Gtk.Label countdown_label {
          label: "";
          xalign: 0.0;
          styles ["dim-label"]
        }

        Gtk.Box {
          orientation: horizontal;
          spacing: 10;
          margin-top: 20;

          Gtk.Button play_now_button {
            label: _("Play Now");
            styles ["suggested-action"]
          }

          Gtk.Button cancel_button {
            label: _("Cancel");
          }
        }
      }
    }

    [overlay]
    Gtk.Box loading_overlay {
      orientation: vertical;
      spacing: 20;
      visible: false;
      halign: center;
      valign: center;
      styles ["osd", "loading-overlay"]

      Gtk.Spinner loading_spinner {
        spinning: true;
        width-request: 48;
        height-request: 48;
      }

      Gtk.Label loading_label {
        label: _("Loading media...");
        styles ["title-2"]
      }
    }

    [overlay]
    Gtk.Box error_overlay {
      orientation: vertical;
      spacing: 20;
      visible: false;
      halign: center;
      valign: center;
      margin-start: 40;
      margin-end: 40;
      styles ["osd", "error-overlay"]

      Gtk.Image {
        icon-name: "dialog-error-symbolic";
        pixel-size: 48;
      }

      Gtk.Label error_label {
        label: _("Failed to load media");
        wrap: true;
        max-width-chars: 50;
        styles ["title-2"]
      }

      Gtk.Button retry_button {
        label: _("Go Back");
        styles ["suggested-action"]
      }

      Gtk.Label {
        label: _("Please check your server connection and try again");
        wrap: true;
        styles ["dim-label"]
      }
    }
  }
}
