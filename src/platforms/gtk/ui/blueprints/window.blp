using Gtk 4.0;
using Adw 1;

template ReelMainWindow : Adw.ApplicationWindow {
  title: "Reel";
  icon-name: "dev.arsfeld.Reel";
  default-width: 1200;
  default-height: 800;

  content: Adw.NavigationSplitView {
    sidebar: Adw.NavigationPage {
      title: _("Reel");
      child: Adw.ToolbarView {
        [top]
        Adw.HeaderBar header_bar {
          [end]
          Gtk.MenuButton {
            icon-name: "open-menu-symbolic";
            menu-model: primary_menu;
          }
        }

        content: Gtk.Box {
          orientation: vertical;

          // Scrollable content area
          Gtk.ScrolledWindow {
            hscrollbar-policy: never;
            vscrollbar-policy: automatic;
            vexpand: true;

            Gtk.Box {
              orientation: vertical;
              margin-top: 12;
              margin-bottom: 12;
              margin-start: 12;
              margin-end: 12;
              spacing: 12;

              Adw.StatusPage welcome_page {
                icon-name: "applications-multimedia-symbolic";
                title: _("Welcome to Reel");
                description: _("Connect to your media server to get started");

                Gtk.Box {
                  orientation: vertical;
                  spacing: 12;
                  halign: center;

                  Gtk.Button connect_button {
                    label: _("Connect to Server");
                    halign: center;
                    styles ["pill", "suggested-action"]
                  }
                }
              }

              // Global Home for all sources
              Adw.PreferencesGroup home_group {
                visible: false;

                Gtk.ListBox home_list {
                  selection-mode: none;
                  styles ["boxed-list"]
                }
              }

              // Container for all source groups
              Gtk.Box sources_container {
                orientation: vertical;
                spacing: 18;
                visible: false;
              }

              // Subtle status indicator at the bottom
              Gtk.Box status_container {
                orientation: horizontal;
                spacing: 6;
                margin-top: 6;
                visible: false;

                Gtk.Image status_icon {
                  icon-name: "network-transmit-receive-symbolic";
                  opacity: 0.5;
                }

                Gtk.Label status_label {
                  label: _("Connected");
                  styles ["dim-label", "caption"]
                }

                Gtk.Spinner sync_spinner {
                  visible: false;
                  margin-start: 6;
                }
              }
            }
          }

          // Sticky Sources button at the bottom
          Gtk.Box {
            orientation: vertical;

            Gtk.Separator {
              orientation: horizontal;
            }

            Gtk.Button sources_button {
              margin-top: 12;
              margin-bottom: 12;
              margin-start: 12;
              margin-end: 12;
              styles ["pill"]

              Gtk.Box {
                orientation: horizontal;
                spacing: 6;
                halign: center;

                Gtk.Image {
                  icon-name: "network-server-symbolic";
                }

                Gtk.Label {
                  label: _("Servers & Accounts");
                }
              }
            }
          }
        };
      };
    };

    content: Adw.NavigationPage content_page {
      tag: "content";
      title: _("Content");

      child: Adw.ToolbarView content_toolbar {
        [top]
        Adw.HeaderBar content_header {
          show-title: true;
        }

        content: Adw.StatusPage empty_state {
          icon-name: "folder-symbolic";
          title: _("Select a Library");
          description: _("Choose a library from the sidebar to browse your media");
        };
      };
    };
  };
}

menu primary_menu {
  section {
    item {
      label: _("Preferences");
      action: "app.preferences";
    }
  }

  section {
    item {
      label: _("About Reel");
      action: "app.about";
    }
  }
}
